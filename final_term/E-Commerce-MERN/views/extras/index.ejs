
<div class="sidebar">
    <div class="sidebar-header">APPLICATION</div>
    <ul class="sidebar-menu">
        <li><a href="#">Dashboard</a></li>
        <li class="submenu">
            <a href="#">Catalog ></a>
            <ul class="submenu-list">
                <li><a href="#" id="product-list-link">Products List</a></li>
                <li><a href="#">Product</a></li>
                <li><a href="#">Categories List</a></li>
                <li><a href="#">Category</a></li>
            </ul>
        </li>
        <li class="submenu">
            <a href="#">Customers ></a>
            <ul class="submenu-list">
                <li><a href="#">Customers List</a></li>
                <li><a href="#">Customer</a></li>
            </ul>
        </li>
        <li class="submenu">
            <a href="#">Orders ></a>
            <ul class="submenu-list">
                <li><a href="#">Orders List</a></li>
                <li><a href="#">Order Details</a></li>
            </ul>
        </li>
        <li><a href="#">Marketing</a></li>
        <li><a href="#">Inbox</a></li>
        <li><a href="#">Chat <span class="badge">8</span></a></li>
        <li><a href="#">File Manager</a></li>
        <li><a href="#">Calendar</a></li>
        <li><a href="#">Analytics</a></li>
        <li><a href="#">Settings</a></li>
    </ul>
</div>
<div class="main-content">

    <div id="product-list" class="content-section "
        style="display:none;">
        <table class="container border-1">
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Category</th>
                    <th>Quantity</th>
                    <th>Price</th>
                </tr>
            </thead>
            <tbody>

            </tbody>
        </table>
    </div>

</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
    const productListLink = document.getElementById("product-list-link");
    const productListSection = document.getElementById("product-list");
    const productListTableBody = productListSection.querySelector("tbody");

    const fetchAndDisplayProducts = async () => {
        try {
            const response = await fetch("/api/product/", {
                method: "GET",
                headers: {
                    "Content-Type": "application/json",
                },
            });

            if (response.ok) {
                const products = await response.json();

                // Clear previous table rows
                productListTableBody.innerHTML = "";

                // Insert new product rows into the table
                products.forEach((product) => {
                    const row = document.createElement("tr");
                    row.innerHTML = `
                    <td><img width="40" src="${product.images[0]?.url}" /></td>
                        <td>${product.title}</td>
                        <td>${product.category}</td>
                        <td>${product.quantity}</td>
                        <td>${product.price}</td>
                        <td class="actions">
                            <button class="edit" data-id="${product._id}">Edit</button>
                            <button class="delete" data-id="${product._id}">Delete</button>
                        </td>
                    `;
                    productListTableBody.appendChild(row);
                });

                
                const editButtons = productListTableBody.querySelectorAll(".edit");
                const deleteButtons = productListTableBody.querySelectorAll(".delete");

                editButtons.forEach((button) => {
                    button.addEventListener("click", handleEditProduct);
                });

                deleteButtons.forEach((button) => {
                    button.addEventListener("click", handleDeleteProduct);
                });
            } else {
                console.error("Failed to fetch products:", response.statusText);
            }
        } catch (error) {
            console.error("Error fetching products:", error);
        }
    };

    const handleEditProduct = async (event) => {
        const productId = event.target.getAttribute("data-id");
        
        console.log("Edit product with ID:", productId);
        // Example: Redirect to edit page
        window.location.href = `/edit-product/${productId}`;
    };

    const handleDeleteProduct = async (event) => {
        const productId = event.target.getAttribute("data-id");
        const confirmed = confirm("Are you sure you want to delete this product?");
        if (confirmed) {
            try {
                const response = await fetch(`/api/product/${productId}`, {
                    method: "DELETE",
                    headers: {
                        "Content-Type": "application/json",
                    },
                });

                if (response.ok) {
                    console.log("Product deleted:", productId);
                    // Refresh the product list
                    fetchAndDisplayProducts();
                } else {
                    console.error("Failed to delete product:", response.statusText);
                }
            } catch (error) {
                console.error("Error deleting product:", error);
            }
        }
    };

    productListLink.addEventListener("click", async (event) => {
        event.preventDefault();
        productListSection.style.display = "block";
        await fetchAndDisplayProducts();
    });
});

//     document.addEventListener("DOMContentLoaded", () => {
//     const productListLink = document.getElementById("product-list-link");
//     const productListSection = document.getElementById("product-list");
//     const productListTableBody = productListSection.querySelector("tbody");

//     productListLink.addEventListener("click", async (event) => {
//         event.preventDefault();
//         productListSection.style.display = "block";

        
//         try {
//             const response = await fetch("/api/product/", {
//                 method: "GET",
//                 headers: {
//                     "Content-Type": "application/json",
//                 },
//             });

//             if (response.ok) {
//                 const products = await response.json();

                
//                 productListTableBody.innerHTML = "";

                
//                 products.forEach((product) => {
//                     const row = document.createElement("tr");
//                     row.innerHTML = `
//                         <td>${product.title}</td>
//                         <td>${product.category}</td>
//                         <td>${product.quantity}</td>
//                         <td>${product.price.toFixed(2)}</td>
//                     `;
//                     productListTableBody.appendChild(row);
//                 });
//             } else {
//                 console.error("Failed to fetch products:", response.statusText);
//             }
//         } catch (error) {
//             console.error("Error fetching products:", error);
//         }
//     });
// });

</script>

<style>
    body {
    font-family: Arial, sans-serif;
    margin: 0;
    display: flex;
}

.sidebar {
    width: 250px;
    background-color: #2c3e50;
    color: white;
    height: 100vh;
    position: fixed;
}

.sidebar-header {
    padding: 20px;
    font-size: 20px;
    text-transform: uppercase;
    border-bottom: 1px solid #34495e;
}

.sidebar-menu {
    list-style-type: none;
    padding: 0;
    margin: 0;
}

.sidebar-menu li {
    position: relative;
}

.sidebar-menu li a {
    display: block;
    padding: 15px 20px;
    color: white;
    text-decoration: none;
}

.sidebar-menu li a:hover {
    background-color: #34495e;
}

.submenu .submenu-list {
    display: none;
    list-style-type: none;
    padding: 0;
    margin: 0;
    padding-left: 20px;
}

.submenu:hover .submenu-list {
    display: block;
}

.badge {
    background-color: #e74c3c;
    color: white;
    border-radius: 12px;
    padding: 2px 8px;
    font-size: 12px;
    position: absolute;
    right: 20px;
    top: 50%;
    transform: translateY(-50%);
}

.main-content {
    margin-left: 250px;
    padding: 20px;
    width: calc(100% - 250px);
}
table {
    width: 100%;
    border-collapse: collapse;
}

th, td {
    padding: 10px;
    text-align: left;
    border-bottom: 1px solid #ddd;
}



.actions {
    display: flex;
    gap: 10px;
}

button {
    padding: 5px 10px;
    border: none;
    border-radius: 3px;
    cursor: pointer;
}

button.edit {
    background-color: #3498db;
    color: white;
}

button.delete {
    background-color: #e74c3c;
    color: white;
}
</style>
